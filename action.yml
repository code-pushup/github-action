name: Code PushUp
description: Quality metrics from Code PushUp

branding:
  icon: activity
  color: blue

inputs:
  monorepo:
    description: |
      For repos containing multiple projects. Options are:

      - `false`: single project mode (default)
      - `true`: turns on monorepo mode (autodetects tool unless `projects` is specified)
      - `nx`: Nx workspace
      - `turbo`: Turborepo
      - `npm`: NPM workspaces
      - `yarn`: Yarn workspaces
      - `pnpm`: PNPM workspaces
    required: true
    default: false
  projects:
    description: |
      Project folders for custom monorepo setup.

      Only used when `monorepo: true` is set and no known monorepo tool is detected.
      Should be a comma-separated list of project folders (supports globs).
    required: false
  task:
    description: |
      Name of task for running Code PushUp CLI in monorepo mode. Defaults to `code-pushup`.

      Dependending on what monorepo tool is being used, this task may represent a `package.json` script, binary executable, Nx target or Turbo task.
    required: true
    default: code-pushup
  bin:
    description: Custom code-pushup executable
    required: true
    default: npx --no-install code-pushup
  config:
    description: Custom code-pushup.config path
    required: false
  directory:
    description: Custom working directory
    required: false
  output:
    description:
      Custom report output directory (use '{project}'-syntax in monorepo mode)
    required: false
    default: .code-pushup
  silent:
    description: Silence logs from Code Pushup CLI
    required: true
    default: false
  token:
    description: GITHUB_TOKEN or a repo scoped PAT
    required: true
    default: ${{ github.token }}
  artifacts:
    description: Upload/download artifacts for caching code-pushup reports
    required: true
    default: true
  retention:
    description: Artifact retention period in days
    required: false
  annotations:
    description: Create file annotations in GitHub
    required: true
    default: true

outputs:
  artifact-id:
    description: ID of uploaded report artifact
  comment-id:
    description: ID of created or updated GitHub comment

runs:
  using: node20
  main: dist/index.js
